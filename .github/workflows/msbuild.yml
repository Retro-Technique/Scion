name: MSBuild

on:

  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:

  build:
  
    name: ${{ matrix.os }} ${{ matrix.platform }} ${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        platform: [x86, x64]
        configuration: ['Debug', 'Release']

    steps:

      - name: Start Windows Audio engine
        run: net start audiosrv

      - name: Audio device
        run: Get-CimInstance Win32_SoundDevice | fl *
        
      - name: Install Scream
        shell: powershell
        run: |
          Start-Service audio*
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.6/Scream3.6.zip -OutFile C:\Scream3.6.zip
          Extract-7Zip -Path C:\Scream3.6.zip -DestinationPath C:\Scream
          $cert = (Get-AuthenticodeSignature C:\Scream\Install\driver\Scream.sys).SignerCertificate
          $store = [System.Security.Cryptography.X509Certificates.X509Store]::new("TrustedPublisher", "LocalMachine")
          $store.Open("ReadWrite")
          $store.Add($cert)
          $store.Close()
          cd C:\Scream\Install\driver
          C:\Scream\Install\helpers\devcon install Scream.inf *Scream
          
      - name: Audio device
        run: Get-CimInstance Win32_SoundDevice | fl *
  
      - name: Checkout code
        uses: actions/checkout@v3
            
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Run MSBuild
        run: msbuild VisualC/Scion.sln -property:Configuration=${{ matrix.configuration }} -property:Platform=${{ matrix.platform }}  

      - name: Run Tests
        uses: rusty-bender/vstest-action@main
        with:
          testAssembly: |
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/Scion-Audio.Test.dll     
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/Scion-Graphics.Test.dll     
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/Scion-Video.Test.dll     

      - uses: actions/upload-artifact@v3
        with:
          name: binaries-artifact
          path: |
            include  
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/*.dll
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/*.lib
            VisualC/${{ matrix.platform }}/${{ matrix.configuration }}/*.pdb
